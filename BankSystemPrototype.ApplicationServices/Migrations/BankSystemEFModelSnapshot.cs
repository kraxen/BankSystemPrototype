// <auto-generated />
using System;
using BankSystemPrototype.ApplicationServices.DataContex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankSystemPrototype.ApplicationServices.Migrations
{
    [DbContext(typeof(BankSystemEF))]
    partial class BankSystemEFModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankSystemPrototype.Domain.AccountModel.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.BankModel.Bank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.ClientModel.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Client");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Client");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.TransactionModel.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("ResipientAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SenderAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransactionInfoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("ResipientAccountId");

                    b.HasIndex("SenderAccountId");

                    b.HasIndex("TransactionInfoId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.TransactionModel.TransactionInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransactionInfos");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.UserModel.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.ClientModel.Company", b =>
                {
                    b.HasBaseType("BankSystemPrototype.Domain.ClientModel.Client");

                    b.Property<string>("INN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.ClientModel.Individual", b =>
                {
                    b.HasBaseType("BankSystemPrototype.Domain.ClientModel.Client");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Individual");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.AccountModel.Account", b =>
                {
                    b.HasOne("BankSystemPrototype.Domain.BankModel.Bank", null)
                        .WithMany("Accounts")
                        .HasForeignKey("BankId");

                    b.HasOne("BankSystemPrototype.Domain.ClientModel.Client", "Owner")
                        .WithMany("GetAccounts")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.ClientModel.Client", b =>
                {
                    b.HasOne("BankSystemPrototype.Domain.BankModel.Bank", null)
                        .WithMany("Clients")
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.TransactionModel.Transaction", b =>
                {
                    b.HasOne("BankSystemPrototype.Domain.BankModel.Bank", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankId");

                    b.HasOne("BankSystemPrototype.Domain.AccountModel.Account", "ResipientAccount")
                        .WithMany()
                        .HasForeignKey("ResipientAccountId");

                    b.HasOne("BankSystemPrototype.Domain.AccountModel.Account", "SenderAccount")
                        .WithMany()
                        .HasForeignKey("SenderAccountId");

                    b.HasOne("BankSystemPrototype.Domain.TransactionModel.TransactionInfo", "TransactionInfo")
                        .WithMany()
                        .HasForeignKey("TransactionInfoId");

                    b.Navigation("ResipientAccount");

                    b.Navigation("SenderAccount");

                    b.Navigation("TransactionInfo");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.UserModel.User", b =>
                {
                    b.HasOne("BankSystemPrototype.Domain.BankModel.Bank", null)
                        .WithMany("Users")
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.BankModel.Bank", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Clients");

                    b.Navigation("Transactions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BankSystemPrototype.Domain.ClientModel.Client", b =>
                {
                    b.Navigation("GetAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
